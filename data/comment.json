[
    {
        "name":"霹雳火秦明",
        "time":"2020.12.17 08:11",
        "src":"../img/avatar-4.jpg",
        "comment":"与字符串出现的次数有关，需要一个数据容器来存放每个字符的出现次数",
        "line":"5"
    },
    {
        "name":"豹子头林冲",
        "time":"2020.12.16 21:21",
        "src":"../img/avatar-4.jpg",
        "comment":"字符串是面试经常被问到的问题，需要正确理解字符串常量池",
        "line":"4"
    },
    {
        "name":"双鞭呼延灼",
        "time":"2020.12.15 05:12",
        "src":"../img/avatar-4.jpg",
        "comment":"找出两个字符串中的最长相同子串, 利用二维数组建立两个字串之间的“对应矩阵”",
        "line":"5"
    },
    {
        "name":"大刀关胜",
        "time":"2020.12.14 06:02",
        "src":"../img/avatar-4.jpg",
        "comment":"给定一个字符串，输出最长的重复子序列, 使用后缀数组解决",
        "line":"5"
    },
    {
        "name":"双枪将董平",
        "time":"2020.12.13 13:22",
        "src":"../img/avatar-4.jpg",
        "comment":"删除排序数组中的重复项，双指针，O(n)复杂度，不使用额外数组空间",
        "line":"4"
    },
    {
        "name":"浪子燕青",
        "time":"2020.12.12 12:28",
        "src":"../img/avatar-4.jpg",
        "comment":"搜索插入位置, 可以使用二分法，来解决这道题目, 时间复杂度O(logn)",
        "line":"4"
    },
    {
        "name":"小李广花荣",
        "time":"2020.12.12 07:11",
        "src":"../img/avatar-4.jpg",
        "comment":"移除元素尝试一个更优解，快慢指针法",
        "line":"5"
    },
    {
        "name":"没羽箭张清",
        "time":"2020.12.11 11:11",
        "src":"../img/avatar-4.jpg",
        "comment":"长度最小的子数组,通过一个快慢指针来实现个滑动窗口，数组时间复杂度为O(n)",
        "line":"5"
    },
    {
        "name":"入云龙公孙胜",
        "time":"2020.12.10 22:23",
        "src":"../img/avatar-4.jpg",
        "comment":"栈作为一种数据结构,是一种只能在一端进行插入和删除操作的特殊线性表",
        "line":"4"
    },
    {
        "name":"母夜叉孙二娘",
        "time":"2020.12.09 23:03",
        "src":"../img/avatar-4.jpg",
        "comment":"队列是一种特殊的线性表,它只允许在表的前端进行删除操作,而在表的后端进行插入操作",
        "line":"5"
    },
    {
        "name":"京中名媛李师师",
        "time":"2020.12.08 22:22",
        "src":"../img/avatar-4.jpg",
        "comment":"入栈s.push(x) 出栈s.pop() 访问栈顶s.top() 判断栈空s.empty() 访问栈中的元素个数s.size()",
        "line":"5"
    },
    {
        "name":"行者武松",
        "time":"2020.12.08 11:13",
        "src":"../img/avatar-4.jpg",
        "comment":"使用两个栈实现一个队列，颠倒两个栈中的元素，从而实现队列的特性",
        "line":"5"
    },
    {
        "name":"黑旋风李逵",
        "time":"2020.12.07 13:12",
        "src":"../img/avatar-4.jpg",
        "comment":"利用两个队列实现一个栈，过调转实现数据特性就好了",
        "line":"4"
    },
    {
        "name":"花和尚鲁智深",
        "time":"2020.12.06 10:00",
        "src":"../img/avatar-4.jpg",
        "comment":"while (q2.size()>1) { q1.push(q2.front());q2.pop(); }",
        "line":"4"
    },
    {
        "name":"神行太保戴宗",
        "time":"2020.12.06 08:13",
        "src":"../img/avatar-4.jpg",
        "comment":"一个数组实现两个栈，采用奇偶栈，采用中间向两头的栈或采用两边向中间的栈",
        "line":"5"
    },
    {
        "name":"及时雨宋江",
        "time":"2020.12.05 11:08",
        "src":"../img/avatar-4.jpg",
        "comment":"有时候会存在空间利用率较低的问题",
        "line":"5"
    },
    {
        "name":"智多星吴用",
        "time":"2020.12.04 22:22",
        "src":"../img/avatar-4.jpg",
        "comment":"一个数据栈，一个辅助栈。数据栈用于存储所有数据，而辅助栈用于存储最小值",
        "line":"4"
    },
    {
        "name":"霹雳火秦明",
        "time":"2020.12.03 09:12",
        "src":"../img/avatar-4.jpg",
        "comment":"链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的",
        "line":"5"
    },
    {
        "name":"豹子头林冲",
        "time":"2020.12.02 12:09",
        "src":"../img/avatar-4.jpg",
        "comment":"一个是存储数据元素的数据域，另一个是存储下一个结点地址的指针域",
        "line":"5"
    },
    {
        "name":"双鞭呼延灼",
        "time":"2020.12.01 09:33",
        "src":"../img/avatar-4.jpg",
        "comment":"链表插入删除比较快，可以用不连续的空间",
        "line":"4"
    },
    {
        "name":"大刀关胜",
        "time":"2020.11.30 23:13",
        "src":"../img/avatar-4.jpg",
        "comment":"由于要返回新链表的头结点，所以要定义一个指针保存新链表的头结点",
        "line":"5"
    },
    {
        "name":"双枪将董平",
        "time":"2020.11.30 15:26",
        "src":"../img/avatar-4.jpg",
        "comment":"两个链表若相交，则从相交点起之后的节点都相同",
        "line":"4"
    },
    {
        "name":"浪子燕青",
        "time":"2020.11.29 13:16",
        "src":"../img/avatar-4.jpg",
        "comment":"利用递归逆序打印单链表，利用递归思想，可以实现从后往前的打印。",
        "line":"5"
    },
    {
        "name":"小李广花荣",
        "time":"2020.11.29 12:32",
        "src":"../img/avatar-4.jpg",
        "comment":"在单链表非头结点前插入结点data，先将节点插入到data后面，然后互换两个节点的值",
        "line":"4"
    },
    {
        "name":"没羽箭张清",
        "time":"2020.11.28 07:34",
        "src":"../img/avatar-4.jpg",
        "comment":"DFS算法涉及在访问兄弟结点前先访问自身以及子结点",
        "line":"5"
    },
    {
        "name":"入云龙公孙胜",
        "time":"2020.11.28 04:33",
        "src":"../img/avatar-4.jpg",
        "comment":"BFS算法涉及在访问子结点前先访问自身以及兄弟结点",
        "line":"4"
    },
    {
        "name":"母夜叉孙二娘",
        "time":"2020.11.27 19:55",
        "src":"../img/avatar-4.jpg",
        "comment":"最小深度与最大深度的差别是不超过1，因此最大与最小深度的差值就是树中最大的深度差值",
        "line":"5"
    },
    {
        "name":"京中名媛李师师",
        "time":"2020.11.27 14:36",
        "src":"../img/avatar-4.jpg",
        "comment":"从其中一个结点开始遍历，遍历过程中检查另外一个结点是否被找到",
        "line":"4"
    },
    {
        "name":"行者武松",
        "time":"2020.11.25 13:28",
        "src":"../img/avatar-4.jpg",
        "comment":"对算法中遍历过的结点进行标记，以避免对结点的重复访问以及循环访问",
        "line":"5"
    },
    {
        "name":"黑旋风李逵",
        "time":"2020.11.25 07:23",
        "src":"../img/avatar-4.jpg",
        "comment":"需要仔细思考中序遍历中到底发生了什么",
        "line":"5"
    },
    {
        "name":"花和尚鲁智深",
        "time":"2020.11.24 21:01",
        "src":"../img/avatar-4.jpg",
        "comment":"如果每个结点都连接到他的父结点，那么可以跟踪p跟q的路径直到他们交叉",
        "line":"4"
    },
    {
        "name":"神行太保戴宗",
        "time":"2020.11.24 18:34",
        "src":"../img/avatar-4.jpg",
        "comment":"给定一个起点S，求出其与所有顶点的最短路径。最短指的是权值之和最小",
        "line":"5"
    },
    {
        "name":"及时雨宋江",
        "time":"2020.11.23 14:22",
        "src":"../img/avatar-4.jpg",
        "comment":"在执行广度优先搜索时，会自动查找从一个顶点到另一个相邻顶点的最短路径",
        "line":"4"
    },
    {
        "name":"智多星吴用",
        "time":"2020.11.22 08:56",
        "src":"../img/avatar-4.jpg",
        "comment":"拓扑排序（Topological Sorting）是一个有向无环图（DAG）的所有顶点的线性序列",
        "line":"4"
    }
]